#chart
%script{:src => url('/js/d3.v2.js')}
:javascript
  var width = 960,
      height = 900;

  var color = d3.scale.category20();

  var force = d3.layout.force()
      .gravity(1)
      .charge(function (node) {
        console.log(node.group);
        return Math.pow(node.group,3) * -200;})
      .linkDistance(function (link) {
        return link.distance * 1500;
      })
      .size([width, height]);

  var svg = d3.select("#chart").append("svg")
      .attr("width", width)
      .attr("height", height);

  d3.json("/data/graph.json", function(json) {
    force
        .nodes(json.nodes)
        .links(json.links)
        .start();

    var link = svg.selectAll("line.link")
        .data(json.links)
      .enter().append("line")
        .attr("class", "link")
        .style("stroke-width", function(d) { return Math.sqrt(d.value); });

    var node = svg.selectAll("circle.node")
        .data(json.nodes)
      .enter().append("circle")
        .attr("class", "node")
        .attr("r", 5)
        .style("fill", function(d) { return color(d.group); })
        .call(force.drag);

    node.append("svg:title")
        .text(function(d) { return d.name });

    force.on("tick", function() {
      link.attr("x1", function(d) { return d.source.x; })
          .attr("y1", function(d) { return d.source.y; })
          .attr("x2", function(d) { return d.target.x; })
          .attr("y2", function(d) { return d.target.y; });

      node.attr("cx", function(d) { return d.x; })
          .attr("cy", function(d) { return d.y; });
    });
  });
